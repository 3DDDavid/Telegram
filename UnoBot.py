# –ë–æ—Ç, –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Å –Ω–∏–º –∏–≥—Ä–∞—Ç—å –≤ –£–Ω–æ (–Ω–µ –¥–æ–¥–µ–ª–∞–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç)


import telebot, random, datetime, traceback

while True:
    try:
        bot = telebot.TeleBot('1192869940:AAGBx2uzrpaLRBx93YngQ2xMs9A6Vn2SvoQ')

        # –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        keyboard_start = telebot.types.ReplyKeyboardMarkup(resize_keyboard=False, one_time_keyboard=True)

        keyboard_player_cards = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)

        keyboard_take_card = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)

        keyboard_congratulation = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        # –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        users = {}
        Users = open('Users.txt', 'r')
        for line in Users:
            line = line.split(', ')
            users.update({line[0]: [int(line[1]), int(line[2].strip())]})
        Users.close()


        # –í—ã–¥–∞—ë—Ç –∫–∞—Ä—Ç—É
        def cards(numeral=False):
            if not numeral:
                color = random.choice(
                    "üü•üü•üü•üü•üü•üü•üü•üü•üü•üü•üü¶üü¶üü¶üü¶üü¶üü¶üü¶üü¶üü¶üü¶üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü©üü©üü©üü©üü©üü©üü©üü©üü©üü©‚¨õ‚¨õ‚¨õ‚¨õ")
                if color == '‚¨õ':
                    if random.choice('4‚ö´') == '4':
                        return color + '+4'
                    else:
                        return color + '‚ö´'
                else:
                    sign = random.choice('000111222333444555666777888999‚Üï‚Üïüö´üö´++')
                    if sign == '+':
                        sign = '+2'
                    return color + sign
            else:
                return random.choice(
                    "üü•üü•üü•üü•üü•üü•üü•üü•üü•üü•üü¶üü¶üü¶üü¶üü¶üü¶üü¶üü¶üü¶üü¶üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü©üü©üü©üü©üü©üü©üü©üü©üü©üü©") + random.choice(
                    '0123456789')


        # –í—ã–≤–æ–¥–∏—Ç –∫–∞—Ä—Ç—ã
        def show_cards(posledniy_shans=False):
            global kol_vo_cards, card1, card2, card3, card4, card5, card6, card7, card8, card9, card10, card11, card12, card13, card14, card15, card16, card17, card18, card19, card20, card21, card22, card23, card24, card25, keyboard_player_cards, keyboard_take_card, users
            keyboard_player_cards = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
            if kol_vo_cards >= 1:
                keyboard_player_cards.row(card1)
            if kol_vo_cards >= 2:
                keyboard_player_cards.row(card2)
            if kol_vo_cards >= 3:
                keyboard_player_cards.row(card3)
            if kol_vo_cards >= 4:
                keyboard_player_cards.row(card4)
            if kol_vo_cards >= 5:
                keyboard_player_cards.row(card5)
            if kol_vo_cards >= 6:
                keyboard_player_cards.row(card6)
            if kol_vo_cards >= 7:
                keyboard_player_cards.row(card7)
            if kol_vo_cards >= 8:
                keyboard_player_cards.row(card8)
            if kol_vo_cards >= 9:
                keyboard_player_cards.row(card9)
            if kol_vo_cards >= 10:
                keyboard_player_cards.row(card10)
            if kol_vo_cards >= 11:
                keyboard_player_cards.row(card11)
            if kol_vo_cards >= 12:
                keyboard_player_cards.row(card12)
            if kol_vo_cards >= 13:
                keyboard_player_cards.row(card13)
            if kol_vo_cards >= 14:
                keyboard_player_cards.row(card14)
            if kol_vo_cards >= 15:
                keyboard_player_cards.row(card15)
            if kol_vo_cards >= 16:
                keyboard_player_cards.row(card16)
            if kol_vo_cards >= 17:
                keyboard_player_cards.row(card17)
            if kol_vo_cards >= 18:
                keyboard_player_cards.row(card18)
            if kol_vo_cards >= 19:
                keyboard_player_cards.row(card19)
            if kol_vo_cards >= 20:
                keyboard_player_cards.row(card20)
            if kol_vo_cards >= 21:
                keyboard_player_cards.row(card21)
            if kol_vo_cards >= 22:
                keyboard_player_cards.row(card22)
            if kol_vo_cards >= 23:
                keyboard_player_cards.row(card23)
            if kol_vo_cards >= 24:
                keyboard_player_cards.row(card24)
            if kol_vo_cards >= 25:
                keyboard_player_cards.row(card25)
            if not posledniy_shans:
                keyboard_player_cards.row('–ù–µ—Ç –∫–∞—Ä—Ç—ã')
            else:
                keyboard_player_cards.row('–ü—Ä–æ–ø—É—Å–∫–∞—é —Ö–æ–¥.')


        # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç
        bot_kol_vo_cards = 7
        kol_vo_cards = 7
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç –±–æ—Ç–∞
        bot_card1 = cards()
        bot_card2 = cards()
        bot_card3 = cards()
        bot_card4 = cards()
        bot_card5 = cards()
        bot_card6 = cards()
        bot_card7 = cards()
        bot_card8 = cards()
        bot_card9 = cards()
        bot_card10 = cards()
        bot_card11 = cards()
        bot_card12 = cards()
        bot_card13 = cards()
        bot_card14 = cards()
        bot_card15 = cards()
        bot_card16 = cards()
        bot_card17 = cards()
        bot_card18 = cards()
        bot_card19 = cards()
        bot_card20 = cards()
        bot_card21 = cards()
        bot_card22 = cards()
        bot_card23 = cards()
        bot_card24 = cards()
        bot_card25 = cards()
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç –∏–≥—Ä–æ–∫–∞
        card1 = cards()
        card2 = cards()
        card3 = cards()
        card4 = cards()
        card5 = cards()
        card6 = cards()
        card7 = cards()
        card8 = cards()
        card9 = cards()
        card10 = cards()
        card11 = cards()
        card12 = cards()
        card13 = cards()
        card14 = cards()
        card15 = cards()
        card16 = cards()
        card17 = cards()
        card18 = cards()
        card19 = cards()
        card20 = cards()
        card21 = cards()
        card22 = cards()
        card23 = cards()
        card24 = cards()
        card25 = cards()
        congratulation, congratulation_message, congratulation_id, congratulation_kol_vo, congratulatory = False, False, 0, 0, ''


        # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
        @bot.message_handler(commands=['start'])
        def start(message):
            global kol_vo_cards, card1, card2, card3, card4, card5, card6, card7, card8, card9, card10, card11, card12, card13, card14, card15, card16, card17, card18, card19, card20, card21, card22, card23, card24, card25, bot_card1, bot_card2, bot_card3, bot_card4, bot_card5, bot_card6, bot_card7, bot_card8, bot_card9, bot_card10, bot_card11, bot_card12, bot_card13, bot_card14, bot_card15, bot_card16, bot_card17, bot_card18, bot_card19, bot_card20, bot_card21, bot_card22, bot_card23, bot_card24, bot_card25, keyboard_player_cards, keyboard_take_card, keyboard_start, users, Users, congratulation, congratulation_message, congratulation_id, congratulation_kol_vo, congratulatory
            print(message.from_user.first_name, message.from_user.last_name, message.from_user.username, message.text,
                  message.from_user.id, str(datetime.datetime.now(datetime.timezone(datetime.timedelta(hours=3))))[:19])
            file = open('UnoBot_message.txt', 'a')
            file.write(str(message.from_user.first_name) + ' ' + str(message.from_user.last_name) + ' ' + str(
                message.from_user.username) + ' ' + str(message.text) + ' ' + str(message.from_user.id) + ' ' + str(
                datetime.datetime.now(datetime.timezone(datetime.timedelta(hours=3))))[:19] + '\n')
            file.close()
            if not str(message.from_user.first_name) + ' ' + str(message.from_user.last_name) + ' ' + str(
                    message.from_user.username) in users:
                users.update({str(message.from_user.first_name) + ' ' + str(message.from_user.last_name) + ' ' + str(
                    message.from_user.username): [message.from_user.id, 7]})
                Users = open('Users.txt', 'a')
                Users.write(
                    '\n{} {} {}, {}, 7'.format(str(message.from_user.first_name), str(message.from_user.last_name),
                                               str(message.from_user.username), message.from_user.id))
                Users.close()
            keyboard_start = telebot.types.ReplyKeyboardMarkup(resize_keyboard=False, one_time_keyboard=True)
            keyboard_start.row('–ù—É —Ç–æ–≥–¥–∞ –¥–∞–≤–∞–π –Ω–∞—á–Ω—ë–º?', '–ü—Ä–∞–≤–∏–ª–∞')
            bot.send_message(message.from_user.id,
                             "–ü—Ä–∏–≤–µ—Ç! –Ø –ù–ï –º–æ–≥—É —Å—ã–≥—Ä–∞—Ç—å —Å —Ç–æ–±–æ–π –≤ —É–Ω–æ. –ë–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ, –ø–æ—ç—Ç–æ–º—É –æ–Ω –Ω–µ –ø–æ–∫–∞ —á—Ç–æ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –≤—ã–¥–∞—Ç—å –∫–∞—Ä—Ç—ã –∏ –æ–±—ä—è—Å–Ω–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞",
                             reply_markup=keyboard_start)


        # –†–µ–∞–∫—Ü–∏–∏ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        @bot.message_handler(content_types=['text'])
        def get_text_messages(message):
            global kol_vo_cards, card1, card2, card3, card4, card5, card6, card7, card8, card9, card10, card11, card12, card13, card14, card15, card16, card17, card18, card19, card20, card21, card22, card23, card24, card25, bot_card1, bot_card2, bot_card3, bot_card4, bot_card5, bot_card6, bot_card7, bot_card8, bot_card9, bot_card10, bot_card11, bot_card12, bot_card13, bot_card14, bot_card15, bot_card16, bot_card17, bot_card18, bot_card19, bot_card20, bot_card21, bot_card22, bot_card23, bot_card24, bot_card25, keyboard_player_cards, keyboard_take_card, keyboard_start, users, Users, congratulation, congratulation, congratulation_message, congratulation_id, congratulation_kol_vo, congratulatory
            print(message.from_user.first_name, message.from_user.last_name, message.from_user.username, message.text,
                  message.from_user.id, str(datetime.datetime.now(datetime.timezone(datetime.timedelta(hours=3))))[:19])
            file = open('UnoBot_message.txt', 'a')
            file.write(str(message.from_user.first_name) + ' ' + str(message.from_user.last_name) + ' ' + str(
                message.from_user.username) + ' ' + str(message.text) + ' ' + str(message.from_user.id) + ' ' + str(
                datetime.datetime.now(datetime.timezone(datetime.timedelta(hours=3))))[:19] + '\n')
            file.close()
            kol_vo_cards = users[str(message.from_user.first_name) + ' ' + str(message.from_user.last_name) + ' ' + str(
                message.from_user.username)][1]
            if message.text.capitalize() == "–ü–æ–∑–¥—Ä–∞–≤–∏—Ç—å!":
                keyboard_congratulation = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True,
                                                                            one_time_keyboard=True)
                keyboard_congratulation.row('–ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç!?')
                for i in range(congratulation_kol_vo):
                    message_ = random.choice(congratulation_message)
                    if message_[:5] == 'CAACA':
                        bot.send_sticker(congratulation_id, message_, reply_markup=keyboard_congratulation)
                    else:
                        bot.send_message(congratulation_id, message_, reply_markup=keyboard_congratulation)
                congratulation, congratulation_message, congratulation_id, congratulation_kol_vo = False, False, 0, 0
                bot.send_message(message.from_user.id, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω!')
            elif str(type(congratulation_message)) == "<class 'list'>":
                congratulation_message.append(str(message.text))

            elif congratulation:
                congratulation_id, congratulation_kol_vo = int(message.text.split()[0]), int(message.text.split()[1])
                keyboard_congratulation = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True,
                                                                            one_time_keyboard=True)
                keyboard_congratulation.row('–ü–æ–∑–¥—Ä–∞–≤–∏—Ç—å!')
                bot.send_message(message.from_user.id,
                                 "–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å –ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è, —Å—Ç–∏–∫–µ—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —ç—Ç–æ–º—É —á–µ–ª–æ–≤–µ–∫—É, –∏ –∫–∞–∫ —Ç–æ–ª—å–∫–æ –≤—Å—ë –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ, –Ω–∞–ø–∏—à–∏—Ç–µ –ü–æ–∑–¥—Ä–∞–≤–∏—Ç—å!",
                                 reply_markup=keyboard_congratulation)
                congratulation_message = []

            elif message.text.capitalize() == '–ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç!?':
                keyboard_start = telebot.types.ReplyKeyboardMarkup(resize_keyboard=False, one_time_keyboard=True)
                keyboard_start.row('(–≤–≤–µ–¥–∏ "/start" —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É)')
                bot.send_message(message.from_user.id, "–í–∞—Å –ø–æ–∑–¥—Ä–∞–≤–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å" + ' ' + congratulatory,
                                 reply_markup=keyboard_start)

            elif message.text.capitalize() == "–ü–æ–∑–¥—Ä–∞–≤–∏—Ç—å":
                Users = open('Users.txt')
                bot.send_message(message.from_user.id, '–°–ø–∏—Å–æ–∫, –∫–æ–≥–æ –º–æ–∂–Ω–æ –ø–æ–∑–¥—Ä–∞–≤–∏—Ç—å:\n\n' + str(Users.read()))
                Users.close()
                bot.send_message(message.from_user.id,
                                 '–ù–∞–ø–∏—à–∏—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–∫–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å (–Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 100) - —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª')
                congratulation, congratulatory = True, str(message.from_user.first_name) + ' ' + str(
                    message.from_user.last_name) + ' ' + str(
                    message.from_user.username)

            elif message.text.capitalize() == "–ù—É —Ç–æ–≥–¥–∞ –¥–∞–≤–∞–π –Ω–∞—á–Ω—ë–º?" or message.text.capitalize() == "–ü—Ä–∞–≤–∏–ª–∞ —è –ø–æ–Ω—è–ª, –¥–∞–≤–∞–π —É–∂–µ –Ω–∞—á–Ω—ë–º?":
                bot.send_message(message.from_user.id, "–û–∫–µ–π, –≤—ã–¥–∞—é –∫–∞—Ä—Ç—ã.")
                # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç
                kol_vo_cards = 7
                users[str(message.from_user.first_name) + ' ' + str(message.from_user.last_name) + ' ' + str(
                    message.from_user.username)][1] = kol_vo_cards
                Users = open('Users.txt', 'w')
                for i in users:
                    posledniy_user = i
                for i in users:
                    Users.write('{}, {}, {}'.format(i, users[i][0], users[i][1]))
                    if not i == posledniy_user:
                        Users.write('\n')
                Users.close()
                # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç –±–æ—Ç–∞
                bot_card1 = cards()
                bot_card2 = cards()
                bot_card3 = cards()
                bot_card4 = cards()
                bot_card5 = cards()
                bot_card6 = cards()
                bot_card7 = cards()
                bot_card8 = cards()
                bot_card9 = cards()
                bot_card10 = cards()
                bot_card11 = cards()
                bot_card12 = cards()
                bot_card13 = cards()
                bot_card14 = cards()
                bot_card15 = cards()
                bot_card16 = cards()
                bot_card17 = cards()
                bot_card18 = cards()
                bot_card19 = cards()
                bot_card20 = cards()
                bot_card21 = cards()
                bot_card22 = cards()
                bot_card23 = cards()
                bot_card24 = cards()
                bot_card25 = cards()
                # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç –∏–≥—Ä–æ–∫–∞
                card1 = cards()
                card2 = cards()
                card3 = cards()
                card4 = cards()
                card5 = cards()
                card6 = cards()
                card7 = cards()
                card8 = cards()
                card9 = cards()
                card10 = cards()
                card11 = cards()
                card12 = cards()
                card13 = cards()
                card14 = cards()
                card15 = cards()
                card16 = cards()
                card17 = cards()
                card18 = cards()
                card19 = cards()
                card20 = cards()
                card21 = cards()
                card22 = cards()
                card23 = cards()
                card24 = cards()
                card25 = cards()
                show_cards()
                bot.send_message(message.from_user.id, "–ö–∞—Ä—Ç—ã –≤—ã–¥–∞–Ω—ã!", reply_markup=keyboard_player_cards)
                if random.randint(1, 10) <= 5:
                    bot.send_message(message.from_user.id, "–•–æ–¥–∏—Ç–µ –Ω–∞ " + cards(numeral=True),
                                     reply_markup=keyboard_player_cards)
                else:
                    bot.send_message(message.from_user.id, "–Ø —Ö–æ–∂—É –Ω–∞ " + cards(numeral=True),
                                     reply_markup=keyboard_player_cards)

            elif message.text.capitalize() == "–ü—Ä–∞–≤–∏–ª–∞":
                keyboard_start = telebot.types.ReplyKeyboardMarkup(resize_keyboard=False, one_time_keyboard=True)
                keyboard_start.row('–ü—Ä–∞–≤–∏–ª–∞ —è –ø–æ–Ω—è–ª, –¥–∞–≤–∞–π —É–∂–µ –Ω–∞—á–Ω—ë–º?')
                bot.send_message(message.from_user.id,
                                 '''–ö–≤–∞–¥—Ä–∞—Ç–∏–∫(üü•üü¶üü®üü©‚¨õÔ∏è) - —Ü–≤–µ—Ç –∫–∞—Ä—Ç—ã;
        –ö—Ä—É–≥(‚ö´Ô∏è) - –∫–∞—Ä—Ç–∞, —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä–æ–π –º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å —Ü–≤–µ—Ç
        –°—Ç—Ä–µ–ª–æ—á–∫–∏(‚Üï) - —Ä–∞–∑–≤–æ—Ä–æ—Ç —Ö–æ–¥–∞ (—Ç–∞–∫ –∫–∞–∫ 2 –∏–≥—Ä–æ–∫–∞, —Ç–æ –±–æ—Ç –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç —Ö–æ–¥, –∏ —Ç—ã –æ–ø—è—Ç—å —Ö–æ–¥–∏—à—å)
        –ë–∞—Ä—å–µ—Ä(üö´) - –ø—Ä–æ–ø—É—Å–∫ —Ö–æ–¥–∞''', reply_markup=keyboard_start)

            elif message.text.capitalize() == "–í–∑—è—Ç—å –∫–∞—Ä—Ç—É":
                kol_vo_cards += 1
                users[str(message.from_user.first_name) + ' ' + str(message.from_user.last_name) + ' ' + str(
                    message.from_user.username)][1] = kol_vo_cards
                Users = open('Users.txt', 'w')
                for i in users:
                    posledniy_user = i
                for i in users:
                    Users.write('{}, {}, {}'.format(i, users[i][0], users[i][1]))
                    if not i == posledniy_user:
                        Users.write('\n')
                Users.close()
                show_cards(posledniy_shans=True)
                bot.send_message(message.from_user.id, '–í –∏—Ç–æ–≥–µ —Ö–æ–¥–∏—Ç–µ?', reply_markup=keyboard_player_cards)

            elif message.text.capitalize() == "–ù–µ—Ç –∫–∞—Ä—Ç—ã":
                keyboard_take_card = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
                keyboard_take_card.row('–í–∑—è—Ç—å –∫–∞—Ä—Ç—É', '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ö–æ–¥')
                bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=keyboard_take_card)

            elif message.text.capitalize() == "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ö–æ–¥":
                show_cards()
                bot.send_message(message.from_user.id, '–û–∫–µ–π, —è —Ö–æ–∂—É', reply_markup=keyboard_player_cards)

            elif message.text.capitalize() == "–ü—Ä–æ–ø—É—Å–∫–∞—é —Ö–æ–¥.":
                show_cards()
                bot.send_message(message.from_user.id, '–û–∫–µ–π, —è —Ö–æ–∂—É', reply_markup=keyboard_player_cards)

            elif message.text.upper() == "SOS" or message.text == "üÜò":
                nomber_word = random.randint(0, 7)
                words = ["–ê?", "–ß—Ç–æ?", "–®–û?", "–ê!?", "–ù–∞—á–∞–ª—Å—è –ö–û–°–ú–ò–ß–ï–°–ö–ò–ô –ê–ü–û–ö–ê–õ–ò–ü–°–ò–°??!!",
                         "–ê–ê–ê–ê–ê–ê–ê–ê–ê! –°–¢–†–ê–ê–ê–ê–®–ù–ê–ê–ê–ê–ê–ê–ê",
                         "–î–ê –ß–¢–û –°–õ–£–ß–ò–õ–û–°–¨ –¢–û????????", '–ê–ê–ê–ê–ê–ê–ê–ê–ê–ê–ê–∞FFFFFFFFFFFf—É—Ü—Ä–∞–ø—Ü—Å–ª—É—Ç–¥–∞—å–≥dsythfjgn']
                bot.send_message(message.from_user.id, words[nomber_word])

            elif message.text.capitalize() == "–ù–µ —Ä–∞–±–æ—Ç–∞–π" or message.text.capitalize() == "–°–ª–æ–º–∞–π—Å—è":
                quit()
                exit()

            elif message.text.capitalize() == "–¢—ã —Ä–∞–±–æ—Ç–∞–µ—à—å?" or message.text.capitalize() == "–¢—ã —Ä–∞–±–æ—Ç–∞–µ—à—å" or message.text.capitalize() == "–¢—ã —Ä–∞–±–æ—Ç–µ—à—å?" or message.text.capitalize() == "–¢—ã —Ä–∞–±–æ—Ç–µ—à—å":
                # bot.send_message(1316880892, '–ò —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä–∞—Ç—å –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ /start –µ—Å–ª–∏ —á—Ç–æ.)')
                bot.send_message(message.from_user.id, '–î–∞, —Ä–∞–±–æ—Ç–∞—é!')


        @bot.message_handler(content_types=['sticker'])
        def get_sticker(message):
            global kol_vo_cards, card1, card2, card3, card4, card5, card6, card7, card8, card9, card10, card11, card12, card13, card14, card15, card16, card17, card18, card19, card20, card21, card22, card23, card24, card25, bot_card1, bot_card2, bot_card3, bot_card4, bot_card5, bot_card6, bot_card7, bot_card8, bot_card9, bot_card10, bot_card11, bot_card12, bot_card13, bot_card14, bot_card15, bot_card16, bot_card17, bot_card18, bot_card19, bot_card20, bot_card21, bot_card22, bot_card23, bot_card24, bot_card25, keyboard_player_cards, keyboard_take_card, keyboard_start, users, Users, congratulation, congratulation_message, congratulation_id, congratulation_kol_vo, congratulatory
            print(message.from_user.first_name, message.from_user.last_name, message.from_user.username,
                  message.sticker.file_id, message.from_user.id,
                  str(datetime.datetime.now(datetime.timezone(datetime.timedelta(hours=3))))[:19])
            file = open('UnoBot_message.txt', 'a')
            file.write(str(message.from_user.first_name) + ' ' + str(message.from_user.last_name) + ' ' + str(
                message.from_user.username) + ' ' + str(message.sticker.file_id) + ' ' + str(
                message.from_user.id) + ' ' + str(
                datetime.datetime.now(datetime.timezone(datetime.timedelta(hours=3))))[:19] + '\n')
            file.close()
            if str(type(congratulation_message)) == "<class 'list'>":
                congratulation_message.append(str(message.sticker.file_id))
            else:
                bot.send_sticker(message.from_user.id, message.sticker.file_id)


        bot.polling(none_stop=True, timeout=1000)

    except:
        bot.send_message(369005503, '–£ –º–µ–Ω—è —á—Ç–æ-—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—åü§∑')
        bot.send_message(369005503, traceback.format_exc())
        print('–û—à–∏–±–∫–∞')
        print('–û—à–∏–±–∫–∞')
        traceback.print_exc()
        print('–û—à–∏–±–∫–∞')
        print('–û—à–∏–±–∫–∞')
